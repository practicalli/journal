{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>A daily journal of thoughts and experiences from commercial work and community projects powered by Material for MkDocs</p>"},{"location":"#practicalli","title":"Practicalli","text":"<p>Practical.li provides free online books covering practical guides to Clojure programming and development workflows.  Practicalli Engineering Playbook contains specific guides across the full spectrum of software development.</p> <p></p> <p>Sponsorship is used to maintain and further develop the Practicalli series of books and videos, although most of the work is done on personal time and own expense.</p> <p>Thank you to Cognitect, Nubank and sponsors from the Clojure community for your continued support</p>"},{"location":"assets/images/social/","title":"Social Cards","text":"<p>Social Cards are visual previews of the website that are included when sending links via social media platforms.</p> <p>Material for MkDocs is configured to generate beautiful social cards automatically, using the colors, fonts and logos defined in <code>mkdocs.yml</code></p> <p>Generated images are stored in this directory.</p>"},{"location":"2018/12/16/day-94---coaching-and-emacs-talk-at-linux-in-london/","title":"Day 94 - Coaching and Emacs talk at Linux in London","text":"<p>Thoughts for today</p> <p>Cycled into London today on the Brompton and my Tannus tyres still going strong.  I finally got a moment to clean them too.</p> <p>Another very productive coaching day in Wagamama today, covering the inside out approach to writing Clojure.  I pushed 3 out of the 6 exercise we completed to Github.</p> <p>Cycled over to SkillsMatter to give (finish writing) my Emacs for your digital life talk for Linux in London community.</p>"},{"location":"2018/12/16/day-94---coaching-and-emacs-talk-at-linux-in-london/#code-from-today","title":"Code from today","text":"<ul> <li>4Clojure #46 </li> <li>4Clojure #47</li> <li>4Clojure #48 </li> </ul>"},{"location":"2018/12/16/day-94---coaching-and-emacs-talk-at-linux-in-london/#coaching-in-clojure-using-4clojurecom","title":"Coaching in Clojure using 4Clojure.com","text":"<p>Covered several Easy level challenges</p> <p>Discussed the thinking approach to solving 4Clojure challenges and problems in general.  Breaking down problems into very simple parts, solving simple parts and then building them up to solve the larger problem.  Much easier to spot errors and find code that does not quite work.</p> <p>Challenges in 4Clojure seem to ask for quite specific forms of result, eg, you must return a set or a vector rather than a list.  This can be a little distracting as many times its simply the values inside the form that are important and where the test is actually taking place.  In extremely simplistic terms you can still think of all collections as a sequence, although everything but a list has extra symantics and features you can use.</p> <p>Worked through challenges #46 to #51 during the coaching session.</p>"},{"location":"2018/12/16/day-94---coaching-and-emacs-talk-at-linux-in-london/#emacs-for-your-digital-life","title":"Emacs for your digital life","text":"<p>Presentation for the Linux in London meetup group.  Lots of festive cheer, swag and I even won a reusable tea cup!</p> <p>The aim of the talk was to show off the advantages of Emacs, so I created my presentation using org-mode.</p> <p>See [[file:~/Documents/emacs-spacemacs.org][~/Documents/emacs-spacemacs.org]]</p>"},{"location":"2018/12/17/day-95---ai-startup-team-lunch---4clojure-exercises/","title":"Day 95 - AI startup team lunch - 4Clojure exercises","text":"<p>Thoughts for today</p> <p>Team lunch with the team I will be working with in the new year.</p> <p>The venue was a very basic restaurant but with nice food.  There are some interesting dynamics in the team, so will need to figure out how to work with them.</p>"},{"location":"2018/12/17/day-95---ai-startup-team-lunch---4clojure-exercises/#code-from-today","title":"Code from today","text":"<ul> <li>4Clojure #49 Split a sequence </li> </ul>"},{"location":"2018/12/17/day-95---ai-startup-team-lunch---4clojure-exercises/#ai-startup-team-lunch","title":"AI Startup Team Lunch","text":"<p>Some awkwardness from the team as most people were meeting for the first time.  I asked lots of questions and tried to make connections although it seems there was some tension in the group.</p>"},{"location":"2018/12/17/day-95---ai-startup-team-lunch---4clojure-exercises/#4clojure-exercises","title":"4Clojure exercises","text":"<p>Carried on adding to the 4Clojure repository of solution write-ups.  Discussing challenge #49 Split a sequence.</p> <p>There was a fairly easy solution using take and drop.  However, with a little digging into the <code>clojure.core</code> the <code>juxt</code> function was a great way to show some abstraction over the drop and take.</p>"},{"location":"2018/12/18/day-96---user-feedback-session--4clojure-exercises/","title":"Day 96 - User Feedback session & 4Clojure exercises","text":"<p>Thoughts for today</p> <p>User feedback session for an interesting AI product client that I will be involved with in the new year.</p> <p>Sometimes listening is a challenge.</p>"},{"location":"2018/12/18/day-96---user-feedback-session--4clojure-exercises/#ai-product-review","title":"AI product review","text":"<p>It was useful to hear from one of the users of the AI product by the company that I will work with next.  </p> <p>However a lot of distraction came from the team, especially in random directions of discussions and unclear discussions about how the tool should be used.</p> <p>This seemed a little about face, as we should be focusing more on how the user is working and fitting the tool around them.  The more training we need to give to the users, the greater barrier there would be to adoption.</p>"},{"location":"2018/12/18/day-96---user-feedback-session--4clojure-exercises/#code-from-today","title":"Code from today","text":"<ul> <li>4Clojure exercises #50 </li> </ul> <p>4Clojure 50: Split by type</p> <pre><code>;; Answers summary\n\ufffc\n\ufffc(fn [data]\n\ufffc  (vals (group-by type data)))\n\ufffc\n\ufffc\n;; low golf score answer\n\ufffc\n\ufffc#(vals (group-by type %))\n</code></pre>"},{"location":"2018/12/18/day-96---user-feedback-session--4clojure-exercises/#4clojure-exercises","title":"4Clojure exercises","text":"<p>I documented the solution to 4Clojure echallenge #50 whilst travelling on the train home from the meeting with the AI product client.</p>"},{"location":"2018/12/20/day-97-planning-2019-and-4clojure/","title":"Day 97 Planning 2019 and 4Clojure","text":"<p>Thoughts for today</p> <p>Planning activities for 2019, including ClojureBridge London events.</p>"},{"location":"2018/12/20/day-97-planning-2019-and-4clojure/#code-from-today","title":"Code from today","text":"<ul> <li>4Clojure exercise #51 </li> </ul>"},{"location":"2018/12/20/day-97-planning-2019-and-4clojure/#4clojure-exercise-51-advanced-destructuring","title":"4Clojure exercise #51 - advanced destructuring","text":"<p>Another chance to read up about destructuring.  </p> <p>Destructuring in Clojure - Clojure.org </p> <p>Destructuring is a great way to reduce the amount of code you need to write by using pattern matching.  </p> <p>We use destructuring to define local names from data structures, both in <code>let</code> functions and function definitions.</p> <p>The challenge itself was fairly straight-forward, demonstrating a nested destructuring example.</p>"},{"location":"2018/12/21/day-98-coaching-and-4clojure-53/","title":"Day 98: Coaching and 4Clojure 53","text":"<p>Thoughts for today</p> <p>Took Poppy (one of my cats) to the vets for a checkup. Apart from a some plaque build Poppy is fine.  More toothpaste and teeth cleaning for Poppy.</p> <p>Cycled into Wagamama Southbank for another coaching session, getting my teeth stuck into 4Clojure challenge #53, a tricky one eventually solved with <code>partition</code> and <code>partition-by</code>.</p>"},{"location":"2018/12/21/day-98-coaching-and-4clojure-53/#4clojure-code","title":"4Clojure code","text":"<ul> <li>4Clojure #53 solution</li> </ul>"},{"location":"2018/12/21/day-98-coaching-and-4clojure-53/#coaching","title":"Coaching","text":"<p>Continued coaching one of my regular students</p>"},{"location":"2018/12/21/day-98-coaching-and-4clojure-53/#4clojure-53","title":"4Clojure #53","text":"<p>Ouch, exercise 53 was quite a tricky problem and very easy to get caught up in imperative thinking.</p> <p>Trying to do this using loop/recur and reduce approach became very complex and we didnt get that working in the end.</p> <p>I started a more functional approach along the right lines with partitioning up the data set so each combination of pairs could be compared to see if the second value was higher than the first.  </p> <p>After some experiementing I realised <code>partition-by</code> could use a function that grouped the pairs until the pairs stopped increasing.  </p> <p>This approach to partitioning put the data in to a shape that made it easier to process.</p> <p>Redundant data was removed and then the remaining partiions sorted by size, using <code>count</code> to find the largest continuous sequence.  </p> <p>Then the resulting partitions needed to be flattened to get the right shape of data as a result.</p> <p>4Clojure Challenge 53 - Partition and Filter</p> <pre><code>;; Partition and Filter approach (medium abstraction)\n\ufffc\n\ufffc(fn [coll]\n\ufffc  (let [a (partition-by #(apply &lt; %) (partition 2 1 coll))\n\ufffc        b (filter (fn [[[x1 x2]]] (&lt; x1 x2)) a)\n\ufffc        c (first (sort-by count &gt; b))]\n\ufffc    (concat (first c) (map last (rest c)))))\n</code></pre>"},{"location":"2018/12/22/day-100-4clojure/","title":"Day 100: 4Clojure","text":"<p>Thoughts for today</p> <p>Walked through 4Clojure challenges number 16 to 22 in the Clojure virtual study group broadcast today.</p>"},{"location":"2018/12/22/day-100-4clojure/#4clojure-code","title":"4Clojure Code","text":"<ul> <li>4Clojure #12</li> <li>4Clojure #13</li> <li>4Clojure #14</li> <li>4Clojure #15</li> </ul>"},{"location":"2018/12/22/day-100-4clojure/#4clojure-writeup","title":"4Clojure writeup","text":"<p>Wrote up previous 4Clojure solutions #12 to #15</p> <p>Lots of fun with sequences and sequence related functions.  Also included two exercises on defining your own functions.</p>"},{"location":"2018/12/23/day-100-4clojure/","title":"Day 100: 4Clojure","text":"<p>Thoughts for today</p> <p>100 days of code challenge completed.  Was it worth it?  Well yes, it got me coding almost every day, and overall I certainly achieved more than 100 hours of coding, more like several 100 hours of coding.  </p> <p>I didnt do was work on a specific project every day, but that would have felt more like work and I enjoyed having a break from that routine.</p> <p>Will I do a 100 days of code challenge again?  Not sure, its quite a hard thing to be consistent with.  I will certainly keep a developer journal from now on as it has been very useful.</p>"},{"location":"2018/12/23/day-100-4clojure/#4clojure","title":"4Clojure","text":"<p>Write up of the 4Clojure exercises I covered in yesterdays Clojure study group broadcast.</p> <p>Popped out for a few essentials in the last day I am prepared to go shopping before the holidays :)</p> <ul> <li>4Clojure #17</li> <li>4Clojure #18</li> <li>4Clojure #19</li> <li>4Clojure #20</li> <li>4Clojure #21</li> <li>4Clojure #22</li> </ul>"},{"location":"2018/12/23/day-100-4clojure/#4clojure-solutions-write-up","title":"4Clojure solutions write up","text":"<p>Continuing to write up a description on how I solved each 4Clojure exercise, explaining how I thought about the problem and different approaches possible.</p> <p>Today was a write up and elaboration on the exercises I covered in yesterdays Clojure study group broadcast.</p>"},{"location":"2018/12/24/day-101-an-extra-day-of-code/","title":"Day 101: An extra day of code","text":"<p>Thoughts for today</p> <p>Added more 4Clojure solutions</p> <p>Got a Logitech MX Ergo trackball mouse today and it is so nice to use.  It is a trackball, so the mouse itself stays static on the desk meaning I dont need to move my hand around and reducing RSI.  It also means I dont need a lot of space to use the mouse either.  The trackball is tilted so my hand is in more comfortable position, the same position I maintain with my tented Model01 keyboard.</p>"},{"location":"2018/12/24/day-101-an-extra-day-of-code/#clojure-core","title":"Clojure core","text":"<p>I finally noticed <code>def</code> supports a doc-string as with <code>defn</code>.  </p> <p><code>ns</code> also supports a doc-string to define the overall purpose of the namespace</p> <p>Adding a string after the name in the <code>def</code> expression will be used as the docstring, assuming there is another value after the string (otherwise the name is bound to the string).</p>"},{"location":"2018/12/24/day-101-an-extra-day-of-code/#cider-tests-in-spacemacs","title":"Cider tests in Spacemacs","text":"<p><code>, t a</code> key binding in Spacemacs was used to run all tests for a Clojure project.</p> <p>The test report buffer is shown, replacing an an existing buffer if the test buffer is not already showing.  This is normal behaviour as I understand it.  The test buffer should be the active window (has the cursor) so pressing q will quit the test report and show you the buffer that was in the window previously.  If test report buffer is kept open in a window, then any new test report should always appear there.</p> <p>The Spacemacs Window Purpose layer could be used to modify the behaviour of the test report buffer placement and window positions for other kinds of buffer (not something I have tried yet)</p>"},{"location":"2018/12/29/day-106-tictactoe-for-virtual-study-group/","title":"Day 106: TicTacToe for Virtual Study Group","text":"<p>Thoughts for today</p> <p>Walking through a video taking a functional approach to the TicTacToe game for the Clojure study group.</p>"},{"location":"2018/12/29/day-106-tictactoe-for-virtual-study-group/#code-from-today","title":"Code from today","text":"<ul> <li>Uppercase player names</li> <li>Display board with a grid</li> <li>Refactor play-game to pure function</li> </ul>"},{"location":"2018/12/29/day-106-tictactoe-for-virtual-study-group/#functional-tictactoe","title":"Functional TicTacToe","text":"<p>Make changes to the design of the board and players to make the code easier to read than the original code in the video by Brian Wills.</p> <p>Refactor the <code>play-game</code> function to take <code>starting-board</code> and <code>player-sequence</code> as arguments rather than pulling in shared values (def).  Passing arguments also means that <code>play-game</code> can be called with different board states, useful for testing especially if a computer opponent was added as an option to the game play.</p> Refactor: play-game function src/tictactoe_cli/core.clj<pre><code>(defn play-game\n  \"The game loop.\n  We iterate through the player sequence (alternate player turns)\n  until there is a winner or the board is full.\"\n  [starting-board player-sequence]\n  (loop [board starting-board\n         player-sequence player-sequence]\n    (let [winner (winner? board)]\n      (println \"Current board:\")\n      (display-board board)\n      (cond\n        winner              (println \"Player \" (player-name winner) \" wins!\")\n        (full-board? board) (println \"The game is a draw.\")\n        :else\n        (recur\n         (take-turn (first player-sequence) board)\n         (rest player-sequence))))))\n\n(comment\n  (play-game starting-board player-sequence))\n</code></pre> <p>It could be interesting to make an AI for both players and watch the output as a game progresses.  A dynamic web page view of the game simulation could producing a simulation like that seen at the end of the War Games movie.</p>"},{"location":"2023/11/19/planing-practicalli-2024/","title":"Planing Practicalli 2024","text":"<p>Thoughts for today</p> <p>How could the community help people find relevant and quality libraries to use for their own development projects?</p>"},{"location":"2023/11/19/planing-practicalli-2024/#clojurists-together-submission","title":"Clojurists Together Submission","text":"<p>Finding what libraries are available for Clojure is predominantly an internet search. There is a lack of central advice as to which of the many libraries available libraries to use and inconsistent opinions often provided.</p> <p>Whilst there are many commonly used libraries, there are many commonly used alternatives.  There are numerous questions in the Clojurians Slack regarding libraries, from those new to Clojure and those more experienced.</p>"},{"location":"2023/11/19/planing-practicalli-2024/#project-goal","title":"Project Goal","text":"<p>The Practicalli \"Which Clojure Library\" project would provide a consistent way to find and understand the purpose of Clojure libraries.  Each library description would be based on commercial and community experiences, not rely on unfiltered social media content.  The community would be able to update aspects of each library description to keep the information as relevant as possible.</p>"},{"location":"2023/11/19/planing-practicalli-2024/#major-features","title":"Major Features","text":"<ul> <li>search for libraries by topic, e.g. web server, routing, html template, etc</li> <li>consistent information for each library (integration with Git for common project information)</li> <li>provide rationale, characteristics and usefulness of each project</li> <li>common stacks and describe their benefits and constraints (in a consistent way)</li> <li>link to the major libraries that compose the stack</li> </ul> <p>The first phase of the project would provide a website that included the most commonly used libraries, each with a comprehensive description of their purpose and related libraries / stacks. </p> <p>mkdocks- Which Libraries Project - GitHub issue </p>"},{"location":"2023/11/20/debian-linux-migration/","title":"Debian Linux migration","text":"<p>Thoughts for today</p> <p>Enjoying Debian Linux and freedom from Snaps</p>"},{"location":"2023/11/20/debian-linux-migration/#post-install","title":"Post install","text":"<p>TODO: see <code>debian-post-install.md</code> file on Londo laptop</p>"},{"location":"2023/11/20/debian-linux-migration/#nordvpn-nordpass","title":"NordVPN &amp; Nordpass","text":"<p>NordVPN installs via a script</p> <p>Nordpass for Linux is only available as a snap, so using the website version.</p> <p>Requested to Nord support that an AppImage package for Nordpass is provided as it does not need all the mechanism of a snap.</p> <p>TODO: investigate if there is a firefox plugin for nordpass that doesnt require a separate install (doesnt seem to be the case unfortunately)</p>"},{"location":"2023/11/20/debian-linux-migration/#adminsitration-account","title":"Adminsitration Account","text":"<p>A root user account is created during initial Debian Linux installation, prompting for the root password.</p> <p><code>su -</code> is used to change from the normal user login to the root account, allowing for package updates and other Adminsitrative commands to be run.</p> <pre><code>su -\n</code></pre> <p>Enter the root password when prompted.</p> <p>Carry out adminsitrative tasks as required and type <code>exit</code> to leave the root acount and return to the user account.</p> <p>Dedicated terminal console</p> <p>When undertaking a lot of adminsitrative tasks, consider changing to the root account in a dedicated terminal console window.</p> <p>Having a separate terminal console window open reduces the need to change between user and root accounts.</p> <p>Terminal applications (e.g. Kitty) can open multiple tabs, so one of the tabs can be used to <code>su</code> to the root account.</p> <p> Kitty Terminal - Practicalli Engineering Playbook</p>"},{"location":"2023/11/21/continuing-the-move-to-debian-linux/","title":"Continuing the move to Debian Linux","text":"<p>Though of the day</p> <p>Uncluttering my laptop collection is a facinating journey down a long history of laptops, many of which  I had forgotten about.  Most of the laptops still work and run new versions of Linux pretty well.</p> <p>I really enjoyed using the EzePc laptops as they were so easy to carry around to all the community events I used to go to.  Although they would have benefited from a nice Atreus keyboard from Keyboard.io.</p> <p>Debian is very useful for older i686 to i386 cpu based hardware.  Firefox-esr is the only browser that seems to still support these older chipsets.</p>"},{"location":"2023/11/21/continuing-the-move-to-debian-linux/#new-journal","title":"New Journal","text":"<p>Use Material for MkDocs blog feature to create a rich experience for journal entries written in markdown.</p> <p>Practicalli Personal Journal </p> <p>The journal will match the appearance of other Practicalli content and therefore have a light and dark theme built in.</p> <p>Older developer journal content will be added to the new journal to make it easier to find and consume this content, e.g. practicalli-john/developer-journal and practicalli-john/100-days-of-code</p> <p>Consider creating a 100 Days of Clojure guide to those new to learning Clojure</p>"},{"location":"2023/11/21/continuing-the-move-to-debian-linux/#practicalli-org-github","title":"Practicalli Org .github","text":"<p>Updated Practicalli GitHub org with default repository healthcheck files</p> <ul> <li>Creative Commons License</li> <li>Code Of Conduct</li> <li>Funding with GitHub Sponsors</li> <li>Pull request templates</li> </ul> <p>All repositories within the Practicalli Org on GitHub will use these defaults unless they provide their own, e.g. within a <code>.github</code> directory.</p> <p>Updated the Practicalli Org profile defined in the <code>.github</code> repository, updating the Clojure REPL workflow images and practicalli logo.</p> <p>Using the .github repository - FreeCodeCamp </p>"},{"location":"2023/11/21/continuing-the-move-to-debian-linux/#github-stats","title":"GitHub stats","text":"<p>Reached 366 consecutive days of commits on the <code>practicalli-john</code> GitHub account.</p> <p>Added a <code>.gitattributes</code> configuration to some repositories reporting a different or irrelevant repository language.  GitHub uses</p> <p>Linguist troubleshooting: Repo language incorrectly detected </p> <p>GitHub Linguist Overrides </p> <p>GitHub Linguist languages supported </p>"},{"location":"2023/11/21/continuing-the-move-to-debian-linux/#debian","title":"Debian","text":"<p>Spending the rest of 2023 moving over to Debian to compare the experience to Ubuntu.</p> <p>One main driver for the switch is the every growing use of Snaps for major parts of Ubuntu, rather than the more efficient debian packages.</p> <p>Snaps can make it easier for maintainers of applications and libraries.  </p> <p>However, there is always at least 2 versions of a snap installed and as a snap is self-contained its install is typically larger.  Snaps such as firefox have also had a noticable impact on performance, especially when starting the application.  I am also concerned that a snap would be using more RAM memory as it is loading its own version of all its libraries into memory.</p> <p>Debian has stayed with the highly reliable and efficient <code>deb</code> package format for everything.</p> <p>Debian is 99% of all the things I like about Ubuntu already.</p>"},{"location":"2023/11/21/continuing-the-move-to-debian-linux/#copy-files-using-sftp","title":"Copy files using sftp","text":"<p>Requires <code>openssh-server</code> on the system that will be connected to.</p> <p>Requires <code>ssh</code> package on the system that will connect to the Openssh-server (not installed on Debian by default).</p> <p>Connect to a user account on a remote system</p> <pre><code>sftp://192.168.0.200/home/remote-username\n</code></pre>"},{"location":"2023/11/21/continuing-the-move-to-debian-linux/#separate-admin-account","title":"Separate admin account","text":"<p>Debian creates a proper <code>root</code> account with password during the initial install, e.g. from the net.iso.  The root account is expected to be used to install packages and other administrative tasks, so the user account created is not added to a sudo list to carry out administration.</p> <p>Ubuntu adds the user account created during initial install to the sudo list, which is a little more convienient but also increases the risk of security breaches.  If a user password is discovered or account otherwise compromised, then any administration task can be carried out.</p> <p>The debian approach does require remembering two passwords, one for the daily user account and one for root administration account.  However, the root password could be added to a secure password manager, e.g. NordPass.</p>"},{"location":"2023/11/22/onboarding-to-a-new-role-hacking-clojure--neovim/","title":"Onboarding to a new role, hacking Clojure & Neovim","text":"<p>Thought of the day</p> <p>Nervous excitement about starting a new role and hopeful I dont mess it up.</p> <p>Enjoying writing a regular journal again, which is something I missed when not working.</p>"},{"location":"2023/11/22/onboarding-to-a-new-role-hacking-clojure--neovim/#the-arqivist","title":"The Arqivist","text":"<p>I've been contributing to The Arqivist open source project, used to back up Slack channels.</p> <p>Another person was interested in collaborating but had a few issues getting started.  The README was updated and an additional <code>:dev/env</code> alias added to <code>deps.edn</code> configuration if a contributor is not using the Practicalli Clojure CLI Config</p> <p>PR93 - dev: update hack locally details for starting a REPL </p>"},{"location":"2023/11/22/onboarding-to-a-new-role-hacking-clojure--neovim/#mulog-custom-transformations","title":"Mulog Custom transformations","text":"<p>Discussing the Arqivist project, a question arose about hiding sensitive data in logs during production whilst still seeing them during development, e.g anonymise sensitive data</p> <p>Mulog has custom transformations which can be used to pre-process each event before the publisher dispatches the event.</p> <p>The mulog maintainer created the where project to define Human readable conditions to filter data. </p> <p>where is a DSL for powerful predicate functions</p> <pre><code>(mulog/start-publisher!\n  {:type :console\n   :pretty? true\n   :transform\n   (partial filter (where :mulog/event-name :in? [:secret/db-connection :secret/api-key]))})\n</code></pre> <p>In a donut-party/system config, a production config would include the <code>:transform</code> and the dev config would not include the <code>:transform</code></p>"},{"location":"2023/11/22/onboarding-to-a-new-role-hacking-clojure--neovim/#neovim","title":"Neovim","text":"<p>How to navigate Clojure code using AstorNvim was asked in the Clojurians Slack channel. </p> <ul> <li><code>g d</code> jumps to definitions, including let bindings and function args</li> <li><code>SPC l s</code> shows symbols in telescope popup</li> <li><code>SPC l S</code> shows symbols in a new buffer</li> <li><code>S-(</code> and <code>S-(</code> to traverse code</li> </ul> <p>Neovim commands to investigate further</p> <ul> <li><code>:help path</code> and the related topics (gf, :find, etc.)</li> <li><code>:help include</code> and related commands ([i, :isearch)</li> <li><code>:help define</code> and related commands (esp. :help include-search)</li> <li><code>:help gd</code> and related commands</li> <li><code>:help Explore</code> and related commands</li> <li><code>:help usr_22</code> has a good introduction</li> </ul> <p>Clojurians Slack - navigating code in neovim discussion </p> <p>Neovim plugin: nvim-treesitter-sexp</p> <p>Evalaute the nvim-treesitter-sexp plugin with the Practialli AstorNvim User configuration and see if it is a valuable way to navigate Clojure expressions.</p> plugins/clojure.lua<pre><code>return {\n  {\n    \"PaterJason/nvim-treesitter-sexp\",\n    ft = { \"clojure\", \"fennel\", \"janet\" },\n    opts = {\n      -- configuration:\n      -- https://github.com/PaterJason/nvim-treesitter-sexp#configuration\n      enabled = true,\n      set_cursor = true,\n      keymaps = {\n        commands = {\n          promote_elem = \"&lt;LocalLeader&gt;kO\",\n          promote_form = \"&lt;LocalLeader&gt;ko\",\n          splice = \"&lt;LocalLeader&gt;k@\",\n        },\n        motions = {},\n        textobjects = {},\n      },\n    },\n  },\n}\n</code></pre> <p>If the plugin is successful, add it to the AstroNvim Community Clojure pack</p>"},{"location":"2023/11/22/onboarding-to-a-new-role-hacking-clojure--neovim/#new-role","title":"New role","text":"<p>I'm starting a new role (references allowing) as an Engineering Manager at a very nice Fintech company.</p> <p>I've signed a contract and started completing the inital onboarding forms.  Hopefully the people I have put as references have positive things to say about me and the company is satisfied.</p> <p>Part of the onboarding is to select a laptop to use.  As the company is in a regulated industry, they use MacBook Pro for their engineers.  I did get a choice of 14\" or 16\" display and which keyboard layout I preferred.</p> <p>My previous experience with MacBook was mared by the elusive <code>#</code> character, so I opted for the International English Keyboard layout</p> <p>MacBook Keyboard layouts visualised </p> <p>MacBook Keyboard guide </p>"},{"location":"2023/11/23/practicalli-email/","title":"Practicalli Email","text":"<p>Thought of the day</p> <p>Making a note of why things are set up are useful so you dont delete anything important!</p>"},{"location":"2023/11/23/practicalli-email/#practicalli-email-address","title":"Practicalli Email address","text":"<p>The Practical.li domain is managed via Gandi domain name service.</p> <p>Recieving emails from @practical.li addresses is manged by Gandi Email forwarding, each @practical.li email is mapped to a GMail email account.</p> <p>Gandi also provided a free mailbox and SMTP service, although from November 2023 this is only a commercial servce.</p> <p>The Gandi mailbox was used to send emails from @practical.li addresses, although Gandi are only providing this as a paid service.  I had forgotten why I had a mailbox with them as all the mail is forwared to GMail.  Once I deleted the Gandi mailbox and send an email with a @practical.li email address I quickly remembered...</p> <p>I would rather use the sponsorship money to support writing content for Practicalli rather than speding it on services.</p> <p>Luckily I found many articles on using Gmail SMTP server for applications and this includes GMail when using a different domain.  This is also much simpler to maintain and understand what it is used for.</p> <p>Create a Google account app password</p> <p>Open myaccount.google.com &gt; Security &gt; 2-Step Verification &gt; App passwords</p> <p>Save app password in password manager as it will not be shown again.</p> <p>Google account will confirm it was the correct user creating the app password, via an email and notification on the users android phone.</p> <p>Sign in with app password - Google Account Help </p> <p>The Google account App Password is used to send @practical.li emails via Google <code>smtp.gmail.com</code> server.</p> <p>The Google account name and password cannot be used as that approach also requires a 2-factor token</p> <p>Add another email account in Gmail</p> <p>Open Gmail &gt; Settings &gt; Accounts and Import</p> <p>Enter Name and Email address for the new email</p> <p>Ensure Treat as an alias is ticked</p> <p>Click Next Step&gt;&gt;</p> <p>Configure the SMTP server with the Google Mail host</p> <p>SMTP: server smtp.gmail.com</p> <p>Username: Google account user name something@gmail.com</p> <p>Password: App password (not the gmail login password) </p> <p>Assuming the credentials are correct, Gmail will send a confirmation email to verify the new email address</p> <p>To add your email address, click on the link in the confirmation email in Gmail Inbox.</p> <p>Send Emails from different address or alias - Gmail help </p> <p>If the email is not recieved, visit the Gmail &gt; Settings &gt; Accounts and Import and select veryify on the new email address</p>"},{"location":"2023/11/23/practicalli-email/#debian-migration","title":"Debian Migration","text":"<p>Backing up a Lenovo laptop to get ready to install Debian Linux.</p> <p>Backup Asus Eze PC 900 and installed Debian Linux using i386 net iso image.</p>"},{"location":"2023/11/24/neovim-search-replace--debian-drm/","title":"Neovim search replace & Debian DRM","text":"<p>Thought of the day</p> <p>What are the options for search and replace text in Neovim?</p> <p>Sometimes error messages are missleading...</p>"},{"location":"2023/11/24/neovim-search-replace--debian-drm/#neovim-search-and-replace","title":"Neovim Search and Replace","text":"<p>Known options</p> <ul> <li><code>g m A</code> will match text under curor allowing in-place editing with visual-multi plugin </li> <li><code>:%substitue</code> vim-style search and replace (I find this fiddley and not reliable, although could be user errror)</li> <li>Clojure LSP for symbols, etc.</li> </ul> <p>Use a visual select to search and replace, with confirmation</p> <p>Note: <code>'&lt;,'&gt;</code> is automatically included when in visual mode and <code>:</code> is pressed to start a command </p> <pre><code>:'&lt;,'&gt;s/search-text/replace-text/gc\n</code></pre> <p>Previous slack discussions - 3 November 2022</p>"},{"location":"2023/11/24/neovim-search-replace--debian-drm/#cdo-neovim-command","title":":cdo neovim command","text":"<p>Telescope can generate a quickfix list, showing the results of pattern matches across the current project files.  Then use search and replace on the quickfix list to make changes across the project.</p> <p>Space f w search for a word across a project</p> <p>Ctrl q opens the quickfix list</p> <p>Use <code>:cdo</code> command to search and replace in the quickfix list</p> <pre><code>:cdo %s/current-pattern/new-pattern/g\n</code></pre> <p>Including the <code>c</code> option to confirm each replacement (using a noice popup when using Practicalli AstroNvim-config)</p> <p>Practicalli Neovim search-replace pages update with lessons learned today</p>"},{"location":"2023/11/24/neovim-search-replace--debian-drm/#debian-linux","title":"Debian Linux","text":"<p>Firefox ESR has DRM disabled by default, so streaming video sites like Amazon Prime and Netflix will show errors</p> <p>Enable DRM for streaming video sites</p> <p>Open Settings &gt; General </p> <p>Scroll down to Play DRM Content option and ensure it is checked.</p> <p>Amazon Prime shows an error describing how to enable the Widevine Content Decryption Module, however this plugin will not show in the <code>about:plugins</code> until the Settings &gt; General &gt; Play DRM Content option is checked.</p>"},{"location":"2023/11/25/cycling-in-the-cold/","title":"Cycling in the cold","text":"<p>Thoughts for today</p> <p>Even in the cold the countryside is beautiful.</p>"},{"location":"2023/11/25/cycling-in-the-cold/#cycling","title":"Cycling","text":"<p>A  level 4 ride with the Bigfoot Cycling Club, covering 80km in 3 hours 36 minutes.</p> <p>Wrapped up warm with multiple layers:</p> <ul> <li>Spatz base layer &amp; Spatz winter base layer</li> <li>La Passion merino jersy</li> <li>Spatz 4 season jacket</li> <li>merino gloves, thick wooly gloves, La passion cycling gloves (to avoid wear on wolly gloves)</li> <li>Spatz toe covers and woolie booly socks</li> </ul>"},{"location":"2023/11/25/cycling-in-the-cold/#neovim-quickfix","title":"Neovim Quickfix","text":"<p>A little more research into understanding the Neovim quickfix mode.</p> <p>Lots of notes that need organising when I'm not really sleepy from cycling.</p>"},{"location":"archive/2023/","title":"2023","text":""},{"location":"archive/2018/","title":"2018","text":""},{"location":"category/journal/","title":"journal","text":""},{"location":"category/debian/","title":"debian","text":""},{"location":"category/neovim/","title":"neovim","text":""},{"location":"category/100daysofcode/","title":"100daysofcode","text":""},{"location":"page/2/","title":"Home","text":""}]}